# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: UI App

on:
  workflow_call:
#  push:
#    branches: [ "main" ]
#    paths:
#      - 'ui/vite-ui-app/**'
#  pull_request:
#    branches: [ "main" ]

jobs:
  changes:
    runs-on: ubuntu-latest

    # Set job outputs to values from filter step
    outputs:
      ui-app: ${{ steps.filter.outputs.ui-app }}

    steps:
    - uses: actions/checkout@v4
    - run: ls -al
    - run: ls -al .github/workflows

    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          ui-app:
            - 'ui/vite-ui-app/**'

  build:
    needs: changes
    if: ${{ needs.changes.outputs.ui-app == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./ui/vite-ui-app

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        cache-dependency-path: '**/ui/vite-ui-app/package-lock.json'
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: ls -al
    - run: npm ci
    - run: npm run build --if-present
    #- run: npm test

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.ui-app == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./ui/vite-ui-app

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        cache-dependency-path: '**/ui/vite-ui-app/package-lock.json'
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: ls -al
    - run: npm ci
    - run: npm run lint --if-present
