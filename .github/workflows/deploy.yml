# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy

on:
  workflow_call:

#  push:
#    branches: [ "main" ]
#    paths:
#      - 'ui/vite-ui-app/**'
#  pull_request:
#    branches: [ "main" ]

jobs:
  deployment:
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: ${{ github.workspace }}/kubeconfig
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: EKS Deploy Prep
      run: |
        # Let's set the env var so all kubectl commands know where the kubeconfig is
        # CAn we put REGION is a top level env variable?
        aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --no-verify-ssl
        ls -al
        ls -al ${KUBECONFIG}
        kubectl get svc
        kubectl delete --ignore-not-found deployment ui-app
        kubectl delete --ignore-not-found service ui-app

    - name: Deploy to EKS
      run: |
        echo "KUBECONFIG: ${KUBECONFIG}"
        ls -al
        ls -al ${KUBECONFIG}
        kubectl get svc
        # Want to do namespace based on ticket.
        # Should use variables here to avoid repeating the ECR id
        # kubectl create deployment ui-app --image=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/nsap/ui-app-runtime:${{github.run_number}}
        # kubectl get deployments
        kubectl apply -k deployment/dev/ui-app
        kubectl get svc
